/*
 * Neopixel.cpp
 *
 *  Created on: 26 Jun 2023
 *      Author: karl
 */
/**
 * the NEOPIXEL_DRIVER doesn't use continous DMA and requires different configuration.
 */
#define USE_NEOPIXEL_DRIVER

#include "Neopixel.hpp"
#include "NeopixelAnimation.hpp"
#include <cinttypes>
#include "tim.h"

#ifdef USE_NEOPIXEL_DRIVER
#include "neopixel32.hpp"
#else
#include "stm32ws2812.hpp"
#endif
#include "estdio.hpp"
#include "dma.h"
#include "main.h"


/**
 * has to be defined this way because the autogenerated solution is in a c file.
 */
extern DMA_HandleTypeDef hdma_tim3_ch1_trig;

namespace neopixel {

#ifdef USE_NEOPIXEL_DRIVER

NP32_Instance_t hw_ws2812_handle = {0};

static int8_t _NP32_StartDMA_Call(uint16_t *buf, uint16_t len)
{
    return (HAL_TIM_PWM_Start_DMA(&htim3, TIM_CHANNEL_1, (uint32_t *) buf, len) == HAL_OK) ? 0 : -1;
}

void _NP32_DMAComplete_Callback(DMA_HandleTypeDef* hdma){
	NP32_DMAComplete_Callback(&hw_ws2812_handle);
}

void init(TIM_HandleTypeDef* timer, uint16_t channel, uint16_t numberOfLeds){
	hw_ws2812_handle.LED_Count = numberOfLeds;
	hw_ws2812_handle.LED_Disable_Flag = 0;
	hw_ws2812_handle.StartDMA_Call = _NP32_StartDMA_Call;

	if(NP32_Init(&hw_ws2812_handle) != 0) {
		printf("failed to initalize neopixel leds.");
	}

	HAL_DMA_RegisterCallback(&hdma_tim3_ch1_trig, HAL_DMA_XFER_CPLT_CB_ID, _NP32_DMAComplete_Callback);
}

void dispose(){
	NP32_DeInit(&hw_ws2812_handle);
}

void set(uint16_t index, color_t color){
	NP32_SetLED_RGB(&hw_ws2812_handle, index, {.R = color.r, .G = color.g, .B = color.b});
}

void set(uint16_t start, uint16_t end, color_t color){
	if(start < end){
		NP32_SetLEDSpan_RGB(&hw_ws2812_handle, start, end, {.R = color.r, .G = color.g, .B = color.b});
	}else{
		NP32_SetLEDSpan_RGB(&hw_ws2812_handle, end, start, {.R = color.r, .G = color.g, .B = color.b});
	}
}

void update(){
	if(NP32_Update(&hw_ws2812_handle) != 0) {
		printf("failed to update neopixel leds.");
	}
}


#else

void init(TIM_HandleTypeDef* timer, uint16_t channel, uint16_t numberOfLeds) {
	if(ws2812b_init(&htim3, TIM_CHANNEL_1, numberOfLeds) != 0){
		printf("failed to initalize neopixel leds.");
	}
}

void dispose(){
	//no dispose supported. this is fine.
}

void set(uint16_t index, color_t color){
	setLedValues(index, color.r, color.g, color.b);
}

void set(uint16_t start, uint16_t end, color_t color) {
	if(start > end){
		uint16_t tmp = start;
		start = end;
		end = tmp;
	}
	for(uint16_t i = start; i <= end; i++){
		set(i, color);
	}
}

void update(){
	//nothing to do here.
}

#endif


}

